name: Deploy Lambda Function

on:
  push:
    paths:
      - "src/**"
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: Create zip file for Lambda function
        run: |
          cd src
          zip -r ../code.zip .

      - name: Update Lambda function code
        run: |
          echo "Updating Lambda function..."
          aws lambda update-function-code --function-name arn:aws:lambda:eu-central-1:637423656827:function:TestCICDFunction --zip-file fileb://code.zip
          echo "Lambda function updated."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"
        timeout-minutes: 10

      - name: Verify Lambda function update
        run: |
          echo "Verifying Lambda function update..."
          aws lambda get-function-configuration --function-name arn:aws:lambda:eu-central-1:637423656827:function:TestCICDFunction
          echo "Lambda function verification complete."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"

      - name: Debug orphan processes
        run: |
          echo "Checking for orphan processes..."
          ps aux

      - name: Cleanup orphan processes
        if: always()
        run: |
          echo "Cleaning up any orphan processes..."
          pkill -f "aws"
          pkill -f "zip"
